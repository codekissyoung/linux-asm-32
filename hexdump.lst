     1                                  section .text ; 程序段
     2                                  global _start
     3                                  _start:
     4 00000000 90                      	nop
     5                                  
     6                                  Read:
     7 00000001 B803000000                  mov eax, 3              ; 指定 sys_read 系统调用
     8 00000006 BB00000000                  mov ebx, 0              ; 文件描述符 0 
     9 0000000B B9[00000000]                mov ecx, Buff           ; 缓冲区地址为 Buff
    10 00000010 BA10000000                  mov edx, BuffLen        ; 读取字符数 1 byte
    11 00000015 CD80                        int 80H
    12                                  
    13 00000017 89C5                        mov ebp, eax            ; 保存下系统调用返回值
    14 00000019 83F800                      cmp eax, 0              ; 如果 eax 为0， 说明到了 EOF
    15 0000001C 7459                            je Exit
    16                                  
    17 0000001E BE[00000000]                mov esi, Buff           ; esi 缓冲地址
    18 00000023 BF[10000000]                mov edi, HexStr         ; 字符串地址
    19 00000028 31C9                        xor ecx, ecx            ; ecx 清零，作为字符计数器
    20                                  
    21                                  Scan:
    22 0000002A 31C0                        xor eax, eax            ; eax 清零
    23                                  
    24 0000002C 89CA                        mov edx, ecx
    25 0000002E 678D1452                    lea edx, [edx * 2 + edx]  ; edx = ecx * 3 计算出第 n 个字符，在 Digits 中的偏移位置
    26                                  
    27 00000032 678A040E                    mov al, byte [esi + ecx]        ; al = Buff[ecx] 处字符
    28 00000036 89C3                        mov ebx, eax
    29                                  
    30                                      ; 低字节插入字符串
    31 00000038 240F                        and al, 0Fh                     ; 通过 and 00001111 取低字节
    32 0000003A 678A80[00000000]            mov al, byte [Digits + eax]
    33 00000041 678882[12000000]            mov byte [HexStr + edx + 2], al ; 低字节偏移 2
    34                                  
    35                                      ; 高字节插入字符串
    36 00000048 C0EB04                      shr bl, 4                       ; bl >> 4
    37 0000004B 678A9B[00000000]            mov bl, byte [Digits + ebx]
    38 00000052 67889A[11000000]            mov byte [HexStr + edx + 1], bl ; 高字节偏移 1
    39                                  
    40 00000059 FFC1                        inc ecx                         ; 下一个字符
    41 0000005B 39E9                        cmp ecx, ebp
    42 0000005D 76CB                            jna Scan                    ; ecx <= ebp
    43                                  
    44                                  ; 将 HexStr 写入标准输出
    45                                  Write:
    46 0000005F B804000000                  mov eax, 4
    47 00000064 BB01000000                  mov ebx, 1
    48 00000069 B9[10000000]                mov ecx, HexStr
    49 0000006E BA31000000                  mov edx, HexLen
    50 00000073 CD80                        int 80h
    51 00000075 EB8A                        jmp Read
    52                                  
    53                                  Exit:
    54 00000077 B801000000              	mov eax, 1      ; exit 系统调用号
    55 0000007C BB00000000              	mov ebx, 0      ; return 0
    56 00000081 CD80                    	int 80h         ; 发送中断，开始系统调用
    57                                  
    58                                  section .data       ; 数据段
    59 00000000 303132333435363738-         Digits: db "0123456789ABCDEF"
    59 00000009 39414243444546     
    60                                      ; 一个字符就对应一组 " 00"，高字节偏移 1，低字节偏移 2 
    61 00000010 203030203030203030-         HexStr: db " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00", 10
    61 00000019 203030203030203030-
    61 00000022 203030203030203030-
    61 0000002B 203030203030203030-
    61 00000034 203030203030203030-
    61 0000003D 2030300A           
    62                                      HexLen equ $ - HexStr
    63                                  
    64                                  section .bss        ; 保存为被初始化的数据的 .bss 段
    65                                      BuffLen equ 16
    66 00000000 <res 00000010>              Buff resb BuffLen
